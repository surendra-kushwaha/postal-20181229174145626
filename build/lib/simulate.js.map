{"version":3,"sources":["../../src/lib/simulate.js"],"names":["PackageType","Countrys","AirportsUS","AirportsCN","AirportsUK","AirportsDE","AirportsCA","AirportsJP","AirportsFR","lostpackagestatus","randomArray","items","Math","floor","length","random","randomNumber","long","maxnum","i","randNum","toString","generatepackage","country","packagetype","randomWeight","min","max","parseInt","getPackageParams","packagename","weight","dateformat","datestatus","daytime","month","getMonth","day","getDate","hour","minutes","getFullYear","generatedispatch","origin","destination","actualYear","Date","substring","originAirport","destinationAirport","generatereceipt","dispatch","finalbag","weightstring","generateUUID","s","hexDigits","substr","uuid","join","generatestatus","step","typeofpatch","randomreceivedExcess","actualStatus","setDate","config","simulate","days","generateEDI","packageid","receptacle","packageuuid","originreceptacle","settlementstatus","status","deliverybyday","MockEDI","packageId","dispatchId","receptacleId","packageUUID","originCountry","destinationCountry","settlementStatus","packageType","shipmentStatus","lastUpdated","DispatchSimulator","size","startDate","endDate","repeatpackage","small","medium","large","EDIorigin","EDIdestination","includes","logger","info","EDICreatePackage","EDIUpdatePackage","EDIpackagetype","EDIdispatchid","rateNumOfRecInExcess","round","ReceivedinExcess_rate","rateNumOfLostParcel","LostParcel_rate","rateNumOfSeizedorReturned","SeizedorReturned_rate","totalrateNumPackages","totalNumPackages","j","EDIpackageParams","EDIpackageid","EDIreceptacleId","countstatus","daysofstatus","totaldaysofstatus","z","datestart","dateend","dayasmilliseconds","diffinmillisenconds","diffindays","randdaysinterval","statusfinished","originReceptacleId","randomlostpackage","data","push","sort","a","b","createpackage","EDImessage","postal","createPackage","updatepackage","payload","packageIds","newShipmentStatus","newSettlementStatus","forEach","ediMessage","packageIDs","updateShipmentStatus"],"mappings":"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","file":"simulate.js","sourcesContent":["/* @flow */\n\nimport config from '../config';\nimport logger from '../logger';\nimport postal from './postal'; // eslint-disable-line no-unused-vars\n\n// define random values\nconst PackageType = ['LA', 'CA', 'EX', 'UA', 'RA']; // tracked,parcels,express,untracked,registered\nconst Countrys = ['US', 'CN', 'UK', 'DE', 'CA', 'JP', 'FR'];\nconst AirportsUS = ['JFKA'];\nconst AirportsCN = ['BJSA'];\nconst AirportsUK = ['LONA', 'CVTA'];\nconst AirportsDE = ['FRAA'];\nconst AirportsCA = ['YTOA'];\nconst AirportsJP = ['TYOA'];\nconst AirportsFR = ['CDGA'];\n\nconst lostpackagestatus = [1, 2, 4, 6, 9, 10, 12, 14]; // possible status for lost packages\n\n// random value of array\nfunction randomArray(items) {\n  return items[Math.floor(items.length * Math.random())];\n}\n\n// random number with return string zero complete\nfunction randomNumber(long) {\n  let maxnum = 1;\n  for (let i = 0; i < long; i += 1) {\n    maxnum *= 10;\n  }\n  let randNum = Math.floor(Math.random() * (maxnum + 1)).toString();\n  while (randNum.length < long) {\n    randNum = `0${randNum}`;\n  }\n  return randNum;\n}\n\n// return package ID\nfunction generatepackage(country, packagetype) {\n  return packagetype + randomNumber(9) + country;\n}\n\n// return a value between Min and Max (Kg Format)\nfunction randomWeight(min, max) {\n  return parseInt((Math.random() * (max - min) + min) * 10, 10) / 10;\n}\n\n// return package name\nfunction getPackageParams(packagetype) {\n  let packagename;\n  let weight;\n  if (packagetype === 'L') {\n    packagename = 'Tracked Packet';\n    weight = randomWeight(0.1, 1.99);\n  }\n  if (packagetype === 'C') {\n    packagename = 'Parcels';\n    weight = randomWeight(2, 10);\n  }\n  if (packagetype === 'E') {\n    packagename = 'Express';\n    weight = randomWeight(2, 10);\n  }\n  if (packagetype === 'U') {\n    packagename = 'Untracked Packets';\n    weight = randomWeight(0.1, 1.99);\n  }\n  if (packagetype === 'R') {\n    packagename = 'Registered';\n    weight = randomWeight(0.1, 1.99);\n  }\n  return [packagename, weight];\n}\n\n// return a date with define format and random hour/minute\nfunction dateformat(datestatus, daytime?) {\n  let month = (datestatus.getMonth() + 1).toString();\n  while (month.length < 2) {\n    month = `0${month}`;\n  }\n  let day = datestatus.getDate().toString();\n  while (day.length < 2) {\n    day = `0${day}`;\n  }\n  let hour;\n  if (daytime) {\n    // from 8am to 19pm\n    hour = Math.floor(Math.random() * (20 - 8) + 8).toString();\n  } else {\n    // from 0am to 23pm\n    hour = Math.floor(Math.random() * 24 + 0).toString();\n  }\n  while (hour.length < 2) {\n    hour = `0${hour}`;\n  }\n  let minutes = Math.floor(Math.random() * 59 + 0).toString();\n  while (minutes.length < 2) {\n    minutes = `0${minutes}`;\n  }\n  return `${datestatus.getFullYear().toString() +\n    month +\n    day +\n    hour +\n    minutes}`;\n}\n\n// return the Dispatch ID\nfunction generatedispatch(origin, destination, packagetype) {\n  const actualYear = new Date()\n    .getFullYear()\n    .toString()\n    .substring(3, 4);\n  let originAirport = '  ';\n  let destinationAirport = '  ';\n\n  if (origin === 'US') {\n    originAirport = randomArray(AirportsUS);\n  }\n  if (origin === 'CN') {\n    originAirport = randomArray(AirportsCN);\n  }\n  if (origin === 'UK') {\n    originAirport = randomArray(AirportsUK);\n  }\n  if (origin === 'DE') {\n    originAirport = randomArray(AirportsDE);\n  }\n  if (origin === 'CA') {\n    originAirport = randomArray(AirportsCA);\n  }\n  if (origin === 'JP') {\n    originAirport = randomArray(AirportsJP);\n  }\n  if (origin === 'FR') {\n    originAirport = randomArray(AirportsFR);\n  }\n\n  if (destination === 'US') {\n    destinationAirport = randomArray(AirportsUS);\n  }\n  if (destination === 'CN') {\n    destinationAirport = randomArray(AirportsCN);\n  }\n  if (destination === 'UK') {\n    destinationAirport = randomArray(AirportsUK);\n  }\n  if (destination === 'DE') {\n    destinationAirport = randomArray(AirportsDE);\n  }\n  if (destination === 'CA') {\n    destinationAirport = randomArray(AirportsCA);\n  }\n  if (destination === 'JP') {\n    destinationAirport = randomArray(AirportsJP);\n  }\n  if (destination === 'FR') {\n    destinationAirport = randomArray(AirportsFR);\n  }\n\n  return `${origin +\n    originAirport +\n    destination +\n    destinationAirport}A${packagetype}${actualYear}${randomNumber(4)}`;\n}\n\n// return the receipt ID\nfunction generatereceipt(dispatch, weight) {\n  const finalbag = randomArray([0, 1, 9]);\n  let weightstring = parseInt(weight * 10, 10).toString();\n  while (weightstring.length < 4) {\n    // fill 4 char with zeros\n    weightstring = `0${weightstring}`;\n  }\n  return `${dispatch + randomNumber(3) + finalbag}0${weightstring}`;\n}\n\n// return the packageUUID\nfunction generateUUID() {\n  const s = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i < 36; i += 1) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n  s[14] = '4'; // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] && 0x3) || 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  const uuid = s.join('');\n  return uuid;\n}\n\n// return the different status from a package and the date status\nfunction generatestatus(step, datestatus, typeofpatch, randomreceivedExcess) {\n  let actualStatus = [''];\n  switch (step) {\n    default:\n      // actualStatus = ['EMA']; // Posting / Collection\n      break;\n    case 0:\n      if (typeofpatch !== 'receivedExcess') {\n        actualStatus = ['EMA']; // Posting / Collection\n      }\n      datestatus.setDate(datestatus.getDate() + config.simulate.days[0]);\n      break;\n    case 1:\n      //     if (typeofpatch !== 'receivedExcess') {\n      //         actualStatus = ['EMB']; // Arrival at outward OE\n      //     }\n      // datestatus.setDate(datestatus.getDate() + config.simulate.days[1]);\n      break;\n    case 2:\n      if (typeofpatch !== 'receivedExcess') {\n        actualStatus = ['EXA']; // EXA Item presented to export customs\n      }\n      datestatus.setDate(datestatus.getDate() + config.simulate.days[1]);\n      break;\n    case 3:\n      if (typeofpatch !== 'receivedExcess') {\n        if (typeofpatch === 'seizedorReturned' && randomreceivedExcess === 0) {\n          actualStatus = ['EXB']; // RETENIDO: EXB Item held by export customs\n          datestatus.setDate(datestatus.getDate() + 1);\n        }\n      }\n      break;\n    case 4:\n      if (typeofpatch !== 'receivedExcess') {\n        actualStatus = ['EXC']; // Item returned from customs\n      }\n      datestatus.setDate(datestatus.getDate() + config.simulate.days[2]);\n      break;\n    case 5:\n      if (typeofpatch !== 'receivedExcess') {\n        if (typeofpatch === 'seizedorReturned' && randomreceivedExcess === 1) {\n          actualStatus = ['EXX']; // cancelation or terminated , status 0 to 3\n          datestatus.setDate(datestatus.getDate() + 1);\n        }\n      }\n      break;\n    case 6:\n      if (typeofpatch !== 'receivedExcess') {\n        // begin directdespatch status - Operator of transits\n        actualStatus = ['EMC', 'PREDES']; // Left Origin (Originally called Item Left)\n      }\n      datestatus.setDate(datestatus.getDate() + config.simulate.days[3]);\n      break;\n    case 7:\n      // actualStatus = ['EMJ']; // Left Origin (Originally called Item Left)\n      break;\n    case 8:\n      // actualStatus = ['EMK']; // Left Origin (Originally called Item Left)\n      break;\n    // end directdespatch status\n    case 9:\n      actualStatus = ['EMD', 'EDA']; // Arrive Destination Post (Receipt Scan)\n      datestatus.setDate(datestatus.getDate() + config.simulate.days[4]);\n      break;\n    case 10:\n      actualStatus = ['EDB']; // Into Customs\n      datestatus.setDate(datestatus.getDate() + config.simulate.days[5]);\n      break;\n    case 11:\n      if (typeofpatch === 'seizedorReturned' && randomreceivedExcess === 2) {\n        actualStatus = ['EME']; // RETENIDO: Handed over to customs\n        datestatus.setDate(datestatus.getDate() + 1);\n      }\n      break;\n    case 12:\n      actualStatus = ['EDC', 'EMF', 'EDD', 'EDE']; // Out of Customs\n      datestatus.setDate(datestatus.getDate() + config.simulate.days[6]);\n      break;\n    case 13:\n      if (typeofpatch === 'seizedorReturned' && randomreceivedExcess === 3) {\n        actualStatus = ['EDX']; // cancelation or terminated , status 4 to 6\n        datestatus.setDate(datestatus.getDate() + 1);\n      }\n      break;\n    case 14:\n      actualStatus = ['EMG', 'EDF', 'EDG', 'EDH', 'EMH', 'EMI']; // Delivery\n      datestatus.setDate(datestatus.getDate() + config.simulate.days[7]);\n      break;\n  }\n  return [randomArray(actualStatus), datestatus];\n}\n\n// return EDI message\nfunction generateEDI(\n  packageid,\n  dispatch,\n  receptacle,\n  packagename,\n  packageuuid,\n  origin,\n  destination,\n  originreceptacle,\n  settlementstatus,\n  weight,\n  status,\n  deliverybyday,\n) {\n  const datestatus = dateformat(status[1], deliverybyday);\n  const MockEDI = {\n    packageId: packageid,\n    dispatchId: dispatch,\n    receptacleId: receptacle,\n    packageUUID: packageuuid,\n    originCountry: origin,\n    destinationCountry: destination,\n    settlementStatus: settlementstatus,\n    weight,\n    packageType: packagename,\n    shipmentStatus: status[0],\n    lastUpdated: datestatus,\n  };\n  return MockEDI;\n}\n\nclass DispatchSimulator {\n  simulate = (\n    size: string,\n    origin: string,\n    destination: string,\n    startDate: Date,\n    endDate: Date,\n  ): Promise<any> => {\n    let repeatpackage = 1;\n    if (size === 'small') {\n      repeatpackage = config.simulate.size.small;\n    } else if (size === 'medium') {\n      repeatpackage = config.simulate.size.medium;\n    } else if (size === 'large') {\n      repeatpackage = config.simulate.size.large;\n    }\n\n    let EDIorigin = origin;\n    let EDIdestination = destination;\n    if (!Countrys.includes(EDIorigin)) {\n      EDIorigin = randomArray(Countrys);\n    } // generate random country if dont exists.\n    if (!Countrys.includes(EDIdestination)) {\n      EDIdestination = randomArray(Countrys);\n    } // generate random country if dont exists.\n\n    logger.info(\n      `--->Sending Size: ${size}  ${repeatpackage} packages, from ${EDIorigin} to ${EDIdestination}`,\n    );\n    const EDICreatePackage = [];\n    const EDIUpdatePackage = [];\n\n    let EDIpackagetype = randomArray(PackageType);\n    let EDIdispatchid = generatedispatch(\n      EDIorigin,\n      EDIdestination,\n      EDIpackagetype,\n    );\n\n    const rateNumOfRecInExcess = Math.round(\n      repeatpackage * config.simulate.ReceivedinExcess_rate / 100,\n    );\n    logger.info(\n      ` Packets with rate NumOfRecInExcess      ${rateNumOfRecInExcess}`,\n    );\n    const rateNumOfLostParcel = Math.round(\n      repeatpackage * config.simulate.LostParcel_rate / 100,\n    );\n    logger.info(\n      ` Packets with rate NumOfLostParcel       ${rateNumOfLostParcel}`,\n    );\n    const rateNumOfSeizedorReturned = Math.round(\n      repeatpackage * config.simulate.SeizedorReturned_rate / 100,\n    );\n    logger.info(\n      ` Packets with rate NumOfSeizedorReturned ${rateNumOfSeizedorReturned}`,\n    );\n    const totalrateNumPackages =\n      rateNumOfRecInExcess + rateNumOfLostParcel + rateNumOfSeizedorReturned;\n    const totalNumPackages = repeatpackage - totalrateNumPackages;\n    // logger.info(\"TOTAL RATES \" + totalrateNumPackages);\n    // logger.info(\"TOTAL MINUS RATES \" + totalNumPackages);\n\n    // REPEAT X PACKAGE FROM SIZE\n    for (let j = 0; j < repeatpackage; j += 1) {\n      if (j % 50 === 0) {\n        EDIpackagetype = randomArray(PackageType);\n        // GENERATE DISPATCHID EACH 50 PACKAGEID GENERATED (with same origin, destination and package type)\n        EDIdispatchid = generatedispatch(\n          EDIorigin,\n          EDIdestination,\n          EDIpackagetype,\n        );\n      }\n      const EDIpackageParams = getPackageParams(EDIpackagetype[0]);\n      const EDIpackageid = generatepackage(EDIorigin, EDIpackagetype);\n      const EDIreceptacleId = generatereceipt(\n        EDIdispatchid,\n        EDIpackageParams[1],\n      );\n\n      let i = 0;\n      let countstatus = 0;\n\n      // generate sum date for status\n      const daysofstatus = config.simulate.days;\n      let totaldaysofstatus = 0;\n      for (let z = 0; z < daysofstatus.length; z += 1) {\n        totaldaysofstatus += +daysofstatus[z];\n      }\n\n      // get the days of difference between start and end date\n      const datestart = new Date(startDate);\n      const dateend = new Date(endDate);\n      const dayasmilliseconds = 86400000;\n      const diffinmillisenconds = dateend - datestart;\n      const diffindays =\n        diffinmillisenconds / dayasmilliseconds - totaldaysofstatus;\n\n      // get days between end date and star date (count days status)\n      const randdaysinterval = Math.floor(Math.random() * (diffindays + 1));\n      totaldaysofstatus += randdaysinterval;\n      dateend.setDate(dateend.getDate() - totaldaysofstatus);\n      // logger.info(\"date init: \" + dateend);\n      // logger.info(\"diffindays: \" + diffindays + \" random: \" + randdaysinterval);\n\n      // LOOP TO GENERATE THE DIFFERENT STATUS\n      let statusfinished = false;\n      let receptacleId;\n      let originReceptacleId;\n      const packageUUID = generateUUID();\n      let dispatchId;\n      let deliverybyday;\n      let settlementStatus = 'Unreconciled';\n      let typeofpatch;\n      const randomreceivedExcess = Math.floor(Math.random() * 4);\n      const randomlostpackage = randomArray(lostpackagestatus); // random lost status\n      // let rememberhourlostpackage; //remember last date for repeat lost status\n\n      do {\n        // dispatch empty or not\n        if (i < 1) {\n          dispatchId = '';\n          originReceptacleId = '';\n        } else {\n          dispatchId = EDIdispatchid;\n          originReceptacleId = EDIreceptacleId;\n        }\n        // receptacleId empty or not\n        if (i < 4) {\n          receptacleId = '';\n        } else {\n          receptacleId = EDIreceptacleId;\n        }\n        // delivery by day\n        if (i > 13) {\n          deliverybyday = true;\n        } else {\n          deliverybyday = false;\n        }\n\n        // reconciled or unreconciled\n        if (i === 14) {\n          settlementStatus = 'Reconciled';\n        } else {\n          settlementStatus = 'Unreconciled';\n        }\n\n        // type o patch: happypatch, lost, seized or returned and received in excess\n        if (totalNumPackages > j) {\n          // HAPPY PATH\n          typeofpatch = 'happypatch';\n          // logger.info(j); //mensaje normal\n        } else if (\n          totalNumPackages <= j &&\n          j < totalNumPackages + rateNumOfSeizedorReturned\n        ) {\n          // Seized or Returned by Customs\n          typeofpatch = 'seizedorReturned';\n        } else if (\n          totalNumPackages + rateNumOfSeizedorReturned <= j &&\n          j < totalNumPackages + rateNumOfSeizedorReturned + rateNumOfLostParcel\n        ) {\n          // Lost Parcel\n          typeofpatch = 'lostParcel';\n        } else if (\n          totalNumPackages + rateNumOfSeizedorReturned + rateNumOfLostParcel <=\n          j\n        ) {\n          // Received In Excess\n          typeofpatch = 'receivedExcess';\n        }\n\n        const data = generateEDI(\n          EDIpackageid,\n          dispatchId,\n          receptacleId,\n          EDIpackageParams[0],\n          packageUUID,\n          EDIorigin,\n          EDIdestination,\n          originReceptacleId,\n          settlementStatus,\n          EDIpackageParams[1],\n          generatestatus(i, dateend, typeofpatch, randomreceivedExcess),\n          deliverybyday,\n        );\n        if (!statusfinished && data.shipmentStatus !== '') {\n          if (i < 1) {\n            // createpackage\n            EDICreatePackage.push(data);\n          } else if (typeofpatch === 'lostParcel' && randomlostpackage === i) {\n            // repeat the last package status with lost status\n            data.shipmentStatus = 'LOST';\n            if (data.lastUpdated) {\n              // data.lastUpdated = rememberhourlostpackage;\n              dateend.setDate(dateend.getDate() + 6); // add 7 days to lost package\n              data.lastUpdated = dateformat(dateend, false);\n            }\n            EDIUpdatePackage.push(data);\n          } else {\n            // add new status\n            EDIUpdatePackage.push(data);\n            // rememberhourlostpackage = data.lastUpdated;\n            // logger.info(\"actual status \" + data.shipmentStatus + ' ' + typeofpatch);\n          }\n          countstatus += 1;\n        }\n\n        // scape from status:\n        statusfinished = [\n          'EMG', // Item at delivery office\n          'EDF', // Item held at delivery office\n          'EDG', // Item out for delivery\n          'EDH', // Item arrival at collection point for pick up\n          'EMH', // Attempted deliver\n          'EMI', // Final delivery\n          'EXX', // Seized or Returned by Customs\n          'EDX', // Seized or Returned by Customs\n          'EME', // Seized or Returned by Customs\n          'EXB', // Seized or Returned by Customs\n          'LOST', // Seized or Returned by Customs\n        ].includes(data.shipmentStatus);\n        if (i > '14') {\n          statusfinished = true;\n        } // end scape if error status\n        i += 1;\n      } while (!statusfinished);\n      logger.info(\n        ` DISPATCHID: ${EDIdispatchid}------PACKAGEID:  ${EDIpackageid}------STATUS:  ${countstatus}  ${typeofpatch}`,\n      );\n    }\n    // order json by time\n    EDICreatePackage.sort((a, b) => {\n      if (a.lastUpdated < b.lastUpdated) return -1;\n      if (a.lastUpdated > b.lastUpdated) return 1;\n      return 0;\n    });\n    EDIUpdatePackage.sort((a, b) => {\n      if (a.lastUpdated < b.lastUpdated) return -1;\n      if (a.lastUpdated > b.lastUpdated) return 1;\n      return 0;\n    });\n    return [EDICreatePackage, EDIUpdatePackage];\n  };\n\n  // insert intro blockchain-createpackage one by one\n  createpackage = (EDImessage: []): Promise<any> => {\n    for (let i = 0; i < EDImessage.length; i += 1) {\n      postal.createPackage(EDImessage[i]);\n    }\n    return EDImessage;\n  };\n\n  // insert intro blockchain-updatepackage all the status package\n  updatepackage = (EDImessage: []): Promise<any> => {\n    // *** for demo app we have to do a little bit of processing here ****\n    const payload = {};\n    const packageIds = [];\n    const newShipmentStatus = [];\n    const lastUpdated = [];\n    const newSettlementStatus = [];\n    EDImessage.forEach(ediMessage => {\n      packageIds.push(ediMessage.packageId);\n      newShipmentStatus.push(ediMessage.shipmentStatus);\n      lastUpdated.push(ediMessage.lastUpdated);\n      newSettlementStatus.push(ediMessage.settlementStatus);\n    });\n    payload.packageIDs = packageIds;\n    payload.newShipmentStatus = newShipmentStatus;\n    payload.lastUpdated = lastUpdated;\n    payload.newSettlementStatus = newSettlementStatus;\n    postal.updateShipmentStatus(payload);\n    return EDImessage;\n  };\n}\n\nexport default DispatchSimulator;\n"]}
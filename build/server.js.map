{"version":3,"sources":["../src/server.js"],"names":["server","app","listen","config","port","host","console","log","handleExit","options","err","cleanup","actions","close","forEach","i","length","process","exit","stack","on","bind"],"mappings":";;;AAGA,4B;AACA,kC;;AAEA;AALA,0CAMA,MAAMA,SAASC,cAAIC,MAAJ,CAAWC,iBAAOC,IAAlB,EAAwBD,iBAAOE,IAA/B,EAAqC,MAAM;AACxDC,UAAQC,GAAR;AACG,2CAAwCJ,iBAAOE,IAAK,IAAGF,iBAAOC,IAAK,GADtE;;AAGD,CAJc,CAAf;;AAMA;AACA,SAASI,UAAT,CAAoBC,OAApB,EAA6BC,GAA7B,EAAkC;AAChC,MAAID,QAAQE,OAAZ,EAAqB;AACnB,UAAMC,UAAU,CAACZ,OAAOa,KAAR,CAAhB;AACAD,YAAQE,OAAR,CAAgB,CAACD,KAAD,EAAQE,CAAR,KAAc;AAC5B,UAAI;AACFF,cAAM,MAAM;AACV,cAAIE,MAAMH,QAAQI,MAAR,GAAiB,CAA3B,EAA8BC,QAAQC,IAAR;AAC/B,SAFD;AAGD,OAJD,CAIE,OAAOR,GAAP,EAAY;AACZ,YAAIK,MAAMH,QAAQI,MAAR,GAAiB,CAA3B,EAA8BC,QAAQC,IAAR;AAC/B;AACF,KARD;AASD;AACD,MAAIR,GAAJ,EAASJ,QAAQC,GAAR,CAAYG,IAAIS,KAAhB;AACT,MAAIV,QAAQS,IAAZ,EAAkBD,QAAQC,IAAR;AACnB;;AAEDD,QAAQG,EAAR,CAAW,MAAX,EAAmBZ,WAAWa,IAAX,CAAgB,IAAhB,EAAsB,EAAEV,SAAS,IAAX,EAAtB,CAAnB;AACAM,QAAQG,EAAR,CAAW,QAAX,EAAqBZ,WAAWa,IAAX,CAAgB,IAAhB,EAAsB,EAAEH,MAAM,IAAR,EAAtB,CAArB;AACAD,QAAQG,EAAR,CAAW,SAAX,EAAsBZ,WAAWa,IAAX,CAAgB,IAAhB,EAAsB,EAAEH,MAAM,IAAR,EAAtB,CAAtB;AACAD,QAAQG,EAAR,CAAW,mBAAX,EAAgCZ,WAAWa,IAAX,CAAgB,IAAhB,EAAsB,EAAEH,MAAM,IAAR,EAAtB,CAAhC","file":"server.js","sourcesContent":["/* @flow */\n/* eslint-disable no-console, no-shadow */\n\nimport app from './app';\nimport config from './config';\n\n// Launch Node.js server\nconst server = app.listen(config.port, config.host, () => {\n  console.log(\n    `Node.js server is listening on http://${config.host}:${config.port}/`,\n  );\n});\n\n// Shutdown Node.js app gracefully\nfunction handleExit(options, err) {\n  if (options.cleanup) {\n    const actions = [server.close];\n    actions.forEach((close, i) => {\n      try {\n        close(() => {\n          if (i === actions.length - 1) process.exit();\n        });\n      } catch (err) {\n        if (i === actions.length - 1) process.exit();\n      }\n    });\n  }\n  if (err) console.log(err.stack);\n  if (options.exit) process.exit();\n}\n\nprocess.on('exit', handleExit.bind(null, { cleanup: true }));\nprocess.on('SIGINT', handleExit.bind(null, { exit: true }));\nprocess.on('SIGTERM', handleExit.bind(null, { exit: true }));\nprocess.on('uncaughtException', handleExit.bind(null, { exit: true }));\n"]}
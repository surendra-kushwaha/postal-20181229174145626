{"version":3,"sources":["../../../src/routes/utils/mongo_db.js"],"names":["createPackage","req","res","postalData","dispatchId","body","packageId","receptacleId","uniqueId","originPost","destinationPost","packageType","weight","currentStatus","settlementStatus","shipmentStatus","startDate","endDate","dateCreated","postal","PostalPackage","save","err","result","logger","trace","send","status","data","createDispatch","totalReconciledWeight","totalReconciledPackages","totalUnreconciledWeight","totalUnreconciledPackages","PostalDispatch","updateDispatch","findOneAndUpdate","$set","exec","error","updatePackage"],"mappings":"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","file":"mongo_db.js","sourcesContent":["import logger from '../../logger';\nimport PostalDispatch from '../../models/postalDispatchData';\nimport PostalPackage from '../../models/postalPackageData';\n\n// Create  Postal Data for package.\nconst createPackage = (req, res) => {\n  const postalData = {\n    dispatchId: req.body.dispatchId,\n    packageId: req.body.packageId,\n    receptacleId: req.body.receptacleId,\n    uniqueId: req.body.uniqueId,\n    originPost: req.body.originPost,\n    destinationPost: req.body.destinationPost,\n    packageType: req.body.packageType,\n    weight: req.body.weight,\n    currentStatus: req.body.currentStatus,\n    settlementStatus: req.body.settlementStatus,\n    shipmentStatus: req.body.shipmentStatus,\n    startDate: req.body.startDate,\n    endDate: req.body.endDate,\n    dateCreated: req.body.dateCreated,\n  };\n  const postal = new PostalPackage(postalData);\n  postal.save((err, result) => {\n    logger.trace('We have gotten a result from Postal Package Data');\n    if (err) {\n      res.send({ status: 'fails', data: err });\n    } else {\n      res.send({ status: 'success', data: result });\n    }\n  });\n};\n\n// Create  Postal Data for dispatch.\nconst createDispatch = (req, res) => {\n  const postalData = {\n    dispatchId: req.body.dispatchId,\n    originPost: req.body.originPost,\n    destinationPost: req.body.destinationPost,\n    totalReconciledWeight: req.body.totalReconciledWeight,\n    totalReconciledPackages: req.body.totalReconciledPackages,\n    totalUnreconciledWeight: req.body.totalUnreconciledWeight,\n    totalUnreconciledPackages: req.body.totalUnreconciledPackages,\n    packageType: req.body.packageType,\n    settlementStatus: req.body.settlementStatus,\n    startDate: req.body.startDate,\n    endDate: req.body.endDate,\n    dateCreated: req.body.dateCreated,\n  };\n  const postal = new PostalDispatch(postalData);\n  postal.save((err, result) => {\n    logger.trace('We have gotten a result from Postal Dispatch Data');\n    if (err) {\n      res.send({ status: 'fails', data: err });\n    } else {\n      res.send({ status: 'success', data: result });\n    }\n  });\n};\n\n// POST updateDispatch at dispatch level\nconst updateDispatch = (req, res) => {\n  const { dispatchId, settlementStatus } = req.body;\n  PostalDispatch.findOneAndUpdate(\n    { dispatchId },\n    { $set: { settlementStatus } },\n  ).exec(err => {\n    logger.trace('We have gotten a result from Postal Dispatch Data');\n    if (err) {\n      logger.error(err);\n      res.status(500).send(err);\n    } else {\n      res.status(200).send('dispatch updated');\n    }\n  });\n};\n\n// POST update package\nconst updatePackage = (req, res) => {\n  const { dispatchId, packageId, settlementStatus } = req.body;\n  PostalPackage.findOneAndUpdate(\n    { dispatchId, packageId },\n    { $set: { settlementStatus } },\n  ).exec(err => {\n    logger.trace('We have gotten a result from Postal Package Data');\n    if (err) {\n      logger.error(err);\n      res.status(500).send(err);\n    } else {\n      res.status(200).send('package updated');\n    }\n  });\n};\n\nexport { createPackage, createDispatch, updatePackage, updateDispatch };\n"]}